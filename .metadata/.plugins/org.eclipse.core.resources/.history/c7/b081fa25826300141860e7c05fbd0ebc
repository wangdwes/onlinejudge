import java.util.ArrayDeque;
import java.util.Deque;

public class Solution {
    public int trap(int[] A) {
    	Deque<Integer> stack = new ArrayDeque<Integer>();
    	int index = 0, amount = 0;
    	while (index < A.length) {
    		System.out.println(amount);
    		if (stack.isEmpty() || A[index] < A[stack.peek()]) stack.push(index++);
    		else if (!stack.isEmpty()) { int topIndex = stack.pop(); 
    			amount += (Math.min(A[stack.peek()], A[index]) - A[topIndex]) * (stack.isEmpty()? 0: index - 1 - stack.peek()); }
    	}
    	return amount;
    }
}

// []

// 0 