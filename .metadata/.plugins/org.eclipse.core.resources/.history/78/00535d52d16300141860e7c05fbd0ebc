
public class Solution {
	
	public int[] A_, B_;
	
	public double medianSearch(int left, int right) {
		int i = (left + right) / 2, j = (A_.length + B_.length + 1) / 2 - i;
		if ((j == 0 || A_[i] > B_[j]) && (j == B_.length || A_[i] <= B_[j + 1])) return A_[i];
		else { if ((j == 0 || A_[i] > B_[j]) && j != B_.length && A_[i] > B_[j + 1])
			return medianSearch(left, i - 1);
			else return medianSearch(i + 1, right); }
	}
	
    public double findMedianSortedArrays(int A[], int B[]) {
    	A_ = A; B_ = B;
    	return medianSearch(Math.max(1, (A.length + B.length + 1) / 2 - B.length),
    			Math.min(A.length, (A.length + B.length + 1) / 2));
    }	
}
