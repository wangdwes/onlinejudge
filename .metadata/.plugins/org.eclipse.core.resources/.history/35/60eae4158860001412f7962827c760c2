import java.util.ArrayList;
import java.util.List;

public class Solution {
	
	public List<List<String>> partition(String s) {
	
		List<List<String>> partitions = new ArrayList<List<String>>();
		List<Integer> lengths = new ArrayList<Integer>();
		
		for (int position = 0; position < s.length(); position++)
			for (int index = 0; index < partitions.size(); index++) {
				
				boolean isPalindrome = true;
				int length = lengths.get(index);
				
				for (int subpos = length; subpos <= position; subpos++)
					if (s.charAt(subpos) != s.charAt(position - subpos + length)) {
						isPalindrome = false; break; }
				
				if (isPalindrome) { 
					List<String> subpartition = partitions.get(index);
					subpartition.add(s.substring(length, position));
					partitions.add(index, subpartition);
					lengths.add(index, length + 1); }
			}
		}
		
		return partitions;
	}

}