import java.util.ArrayList;
import java.util.List;


public class Solution {

	public int n_, k_;
	public List<List<Integer>> combos;
	
    public List<List<Integer>> combine(int n, int k) {
    	combos = new ArrayList<List<Integer>>(); n_ = n; k_ = k;
    }
    
    public void dfs(int depth, List<Integer> combo) {
    	if (depth == k_) { combos.add(new ArrayList<Integer>(combo)); return; }  	
   		for (int index = combo.isEmpty()? 1: combo.get(combo.size() - 1) + 1; index <= n_; index++) {
   			combo.add(index); dfs(depth + 1, combo); combo.remove(combo.size() - 1); }
    }
	
}
