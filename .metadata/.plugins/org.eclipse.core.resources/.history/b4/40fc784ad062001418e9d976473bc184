import java.util.Arrays;

public class Solution {
	
    public int threeSumClosest(int[] num, int target) {
		
		// Elements in a triplet must be in non-descending order...
		// So actually it makes sense to sort the array first. 
		Arrays.sort(num); int closest = Integer.MAX_VALUE;
		
		for (int first = 0; first < num.length - 2; first++) {
			if (first > 0 && num[first] == num[first - 1]) continue;
			int second = first + 1, third = num.length - 1;
			while (second < third) { // -4 -1 -1 0 1 2
				int sum = num[first] + num[second] + num[third];
				if (Math.abs(sum - target) < Math.abs(closest - traget))
					closest = sum; 
				if (sum <= 0) { second++; while (second < third && num[second] == num[second - 1]) second++; }
				if (sum >= 0) { third--; while (second < third && num[third] == num[third + 1]) third--; }
			}
		}

		return closest;

	}	
	
}
